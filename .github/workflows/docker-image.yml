name: Build and Push Docker Images

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-ecommerce-service:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for ECommerce Service
      id: meta-ecommerce
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ecommerce-service
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{short}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push ECommerce Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./ECommerceService.WebApi/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-ecommerce.outputs.tags }}
        labels: ${{ steps.meta-ecommerce.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-identity-service:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Identity Service
      id: meta-identity
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/identity-service
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{short}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Identity Service Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./IdentityService.WebApi/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-identity.outputs.tags }}
        labels: ${{ steps.meta-identity.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-multi-platform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for multi-platform builds
      id: meta-multi
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ecommerce-service
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/identity-service
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push ECommerce Service multi-platform
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./ECommerceService.WebApi/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-multi.outputs.tags }}
        labels: ${{ steps.meta-multi.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Identity Service multi-platform
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./IdentityService.WebApi/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-multi.outputs.tags }}
        labels: ${{ steps.meta-multi.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
